const API_URL = import.meta.env.VITE_API_URL || "http://localhost:5000/api";
console.log("API_URL:", API_URL); // üëà –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ —Å–µ –∑–∞—Ä–µ–∂–¥–∞

export const register = async (userData) => {
    const response = await fetch(`${API_URL}/register`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify(userData),
        credentials: "include",
    });

    if (!response.ok) {
        throw new Error("Registration failed");
    }

    return response.json();
};

// export const login = async (credentials) => {
//     try {
//         const response = await fetch(`${API_URL}/login`, {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json',
//             },
//             body: JSON.stringify(credentials), // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ `credentials`, –∫–æ–π—Ç–æ –ø–æ–¥–∞–≤–∞ email –∏ password
//         });

//         // –ß–µ—Ç–µ–º JSON –≤–µ–¥–Ω—ä–∂
//         const data = await response.json();

//         console.log("Login response data:", data); // ‚úÖ Log —Å–∞–º–æ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ

//         if (!response.ok) {
//             throw new Error(data.message || "Login failed");
//         }

//         return data; // –í—Ä—ä—â–∞–º–µ `data`, –∑–∞—â–æ—Ç–æ –≤–µ—á–µ —Å–º–µ –≥–æ –ø–∞—Ä—Å–Ω–∞–ª–∏
//     } catch (error) {
//         console.error("Login error:", error);
//         throw error; // –ü—Ä–µ—Ö–≤—ä—Ä–ª—è–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞ –Ω–∞–≥–æ—Ä–µ, –∑–∞ –¥–∞ –º–æ–∂–µ –¥–∞ —Å–µ –æ–±—Ä–∞–±–æ—Ç–∏ –≤ UI
//     }
// }; 
// export const login = async (credentials) => {
//     try {
//         const response = await fetch(`${API_URL}/login`, {
//             method: "POST",
//             headers: {
//                 "Content-Type": "application/json",
//             },
//             body: JSON.stringify(credentials),
//             credentials: "include", // –í–∞–∂–Ω–æ –∑–∞ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ cookie
//         });

//         const data = await response.json();
//         console.log("Login response data:", data);

//         if (!response.ok) {
//             throw new Error(data.message || "Login failed");
//         }

//         // üëâ –ê–∫–æ –±–µ–∫–µ–Ω–¥—ä—Ç –Ω–µ –≤—Ä—ä—â–∞ —Ç–æ–∫–µ–Ω –≤ JSON, —Ç—Ä—è–±–≤–∞ –¥–∞ –≥–æ –≤–∑–µ–º–µ—à —Ä—ä—á–Ω–æ
//         const token = document.cookie
//             .split("; ")
//             .find(row => row.startsWith("auth_cookie_name=")) // –ó–∞–º–µ–Ω–∏ —Å —Ä–µ–∞–ª–Ω–æ—Ç–æ –∏–º–µ –Ω–∞ cookie-—Ç–æ
//             ?.split("=")[1];

//         if (token) {
//             localStorage.setItem("token", token); // –ó–∞–ø–∞–∑–≤–∞–º–µ —Ç–æ–∫–µ–Ω–∞
//         } else {
//             console.warn("Token not found in cookies");
//         }

//         return data;
//     } catch (error) {
//         console.error("Login error:", error);
//         throw error;
//     }
// };

export const login = async (credentials) => {
    try {
        const response = await fetch(`${API_URL}/login`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(credentials),
            credentials: "include",
        });

        const data = await response.json();
        console.log("Login response data:", data);

        if (!response.ok) {
            throw new Error(data.message || "Login failed");
        }

        if (data.token) { 
            localStorage.setItem("token", data.token);
        } else {
            console.warn("No token received from backend!");
        }

        return data.user;
    } catch (error) {
        console.error("Login error:", error);
        throw error;
    }
};

export const getProfile = async () => {
    const token = localStorage.getItem("token");
    if (!token) throw new Error("No token found");

    const response = await fetch(`${API_URL}/users/me`, {
        method: "GET",
        headers: {
            "Authorization": `Bearer ${token}`,
        },
        credentials: "include",
    });

    if (!response.ok) {
        throw new Error("Failed to fetch user profile");
    }

    return await response.json();
};


// export const getProfile = async () => {
//     const token = localStorage.getItem("token");
//     if (!token) throw new Error("No token found");

//     const response = await fetch(`${API_URL}/users/me`, {
//         method: "GET",
//         headers: {
//             "Authorization": `Bearer ${token}`,
//         },
//         credentials: "include",
//     });

//     if (!response.ok) {
//         throw new Error("Failed to fetch user profile");
//     }

//     return response.json();
// };


// export const getProfile = async () => {
//     const response = await fetch(`${API_URL}/users/me`, {
//         method: "GET",
//         credentials: "include", // –ó–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ, –∑–∞ –¥–∞ —Å–µ –∏–∑–ø—Ä–∞—Ç—è—Ç cookie-—Ç–∞
//     });

//     if (!response.ok) {
//         throw new Error("Failed to fetch user profile");
//     }

//     return response.json(); // –í–µ—á–µ –ø—Ä–æ—Ñ–∏–ª—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –≤—Ä—ä—â–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ
// };

// export const getProfile = async () => {
//     const token = localStorage.getItem("token");
//     if (!token) throw new Error("No token found");

//     const response = await fetch(`${API_URL}/users/me`, {
//         method: "GET",
//         headers: {
//             "Authorization": `Bearer ${token}`, // ‚úîÔ∏è –ò–∑–ø—Ä–∞—â–∞–º–µ —Ç–æ–∫–µ–Ω–∞
//         },
//         credentials: "include",
//     });

//     if (!response.ok) {
//         throw new Error("Failed to fetch user profile");
//     }

//     return response.json();
// };

const getAuthHeaders = () => {
    const token = localStorage.getItem('token'); // –í–∑–µ–º–∞–º–µ —Ç–æ–∫–µ–Ω–∞ –æ—Ç localStorage
    if (token) {
        return { 'Authorization': `Bearer ${token}` }; // –í—Ä—ä—â–∞–º–µ Authorization –∑–∞–≥–ª–∞–≤–∏–µ —Å —Ç–æ–∫–µ–Ω–∞
    }
    return {};
};

export const fetchUser = async () => {
    try {
        const response = await fetch(`${API_URL}/users/me`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                ...getAuthHeaders(), // –î–æ–±–∞–≤—è–º–µ —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–ª–∞–≤–∏—è—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞
            },
            credentials: 'include', // –ó–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏ –±–∏—Å–∫–≤–∏—Ç–∫–∞—Ç–∞
        });

        if (!response.ok) {
            throw new Error('Failed to fetch user profile');
        }

        return await response.json();
    } catch (error) {
        console.error(error);
        throw error;
    }
};

